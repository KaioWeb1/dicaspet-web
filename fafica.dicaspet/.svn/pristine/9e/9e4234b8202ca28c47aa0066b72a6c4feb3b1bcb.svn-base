package com.dicaspet.MB;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import com.dicaspet.entidade.PrestadorServico;
import com.dicaspet.fachada.Fachada;
import com.dicaspet.util.FacesMessageUtil;


@ManagedBean(name="prestadorMB")
@SessionScoped
public class PrestadorServicoMB {

	private PrestadorServico prestadorServico;
	private Fachada fachada;
	private List<PrestadorServico> prestadorServicos;
	private PrestadorServico prestadorSelecionado;
	private List<PrestadorServico> prestadoresSelecionados;
	
	private Date date10;

	public PrestadorServicoMB() {

		prestadorServico = new PrestadorServico();
		fachada = Fachada.getInstance();
	}

	public PrestadorServico getPrestadorServico() {
		return prestadorServico;
	}

	public void setPrestadorServico(PrestadorServico prestadorServico) {
		this.prestadorServico = prestadorServico;
	}

	public Fachada getFachada() {
		return fachada;
	}

	public void setFachada(Fachada fachada) {
		this.fachada = fachada;
	}

	public List<PrestadorServico> getPrestadorServicos() {
		if (prestadorServicos == null) {
			try {
				prestadorServicos = fachada.controladorPrestadorServico().listar();
			} catch (Exception e) {
				prestadorServicos = new ArrayList<PrestadorServico>();
			}
		}

		return prestadorServicos;
	}

	public void setPrestadorServicos(List<PrestadorServico> prestadorServicos) {
		this.prestadorServicos = prestadorServicos;
	}

	public void cadastrar() {

		fachada.controladorPrestadorServico().cadastrar(prestadorServico);
		FacesMessage message= FacesMessageUtil.criarMensagemInfo("Cadastro com Sucesso!",
				"O prestador de serviço " + prestadorServico.getPrtsrv_nome()
						+ " foi cadastrado com sucesso.");
		
		FacesContext.getCurrentInstance().addMessage(null, message);
limpar();
	}
	
	private void limpar(){
		prestadorServico = new PrestadorServico();
	}

		public Date getDate10() {
			return date10;
		}

		public void setDate10(Date date10) {
			this.date10 = date10;
		}

		public PrestadorServico getPrestadorSelecionado() {
			return prestadorSelecionado;
		}

		public void setPrestadorSelecionado(PrestadorServico prestadorSelecionado) {
			this.prestadorSelecionado = prestadorSelecionado;
		}

		public List<PrestadorServico> getPrestadoresSelecionados() {
			return prestadoresSelecionados;
		}

		public void setPrestadoresSelecionados(
				List<PrestadorServico> prestadoresSelecionados) {
			this.prestadoresSelecionados = prestadoresSelecionados;
		}
	 
		public String editarPrestadorRedirect(PrestadorServico prestador) {

			this.prestadorServico =prestador;

			return "editar-prestador?faces-redirect=true";

		}

	
		public void editar() {

			fachada.controladorPrestadorServico().atualizar(prestadorServico);
			FacesMessage message = FacesMessageUtil.criarMensagemInfo(
					"Editado com Sucesso!", "O Prestador de Serviço " + prestadorServico.getPrtsrv_nome()
							+ " foi editado com sucesso.");

			FacesContext.getCurrentInstance().addMessage(null, message);
			prestadorServico = new PrestadorServico();
		}
		
		public void deletar(PrestadorServico prestador){
			fachada.controladorPrestadorServico().remover(prestador);
		}
	
	
	
	
}
